{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport { signUpAction } from '../reducers/user';\nimport { useDispatch } from 'react-redux'; // useCallback 자식컴포넌트에 넘기는 함수는 유즈콜백으로 감싸준다\n//커스텀 훅\n\nexport var useInput = function useInput() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _useState = useState(initValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setter = _useState2[1];\n\n  var handler = useCallback(function (e) {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nvar Signup = function Signup() {\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      id = _useState4[0],\n      setId = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nick = _useState6[0],\n      setNick = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordCheck = _useState10[0],\n      setPasswordCheck = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      term = _useState12[0],\n      setTerm = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      passwordError = _useState14[0],\n      setPasswordError = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      termError = _useState16[0],\n      setTermError = _useState16[1];\n\n  var dispatch = useDispatch();\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispatch(signUpAction({\n      id: id,\n      password: password,\n      nick: nick\n    }));\n  });\n  var onChangeId = useCallback(function (e) {\n    setId(e.target.value);\n  }, [id]);\n\n  var onChangeNick = function onChangeNick(e) {\n    setNick(e.target.value);\n  };\n\n  var onChangePassword = function onChangePassword(e) {\n    setPassword(e.target.value);\n  };\n\n  var onChangePasswordChk = function onChangePasswordChk(e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  };\n\n  var onChangeTerm = function onChangeTerm(e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, React.createElement(\"div\", null, React.createElement(\"label\", {\n    htmlFor: \"user-id\"\n  }, \"\\uC544\\uC774\\uB514\"), React.createElement(\"br\", null), React.createElement(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId\n  })), React.createElement(\"div\", null, React.createElement(\"label\", {\n    htmlFor: \"user-Nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), React.createElement(\"br\", null), React.createElement(Input, {\n    name: \"user-Nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick\n  })), React.createElement(\"div\", null, React.createElement(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), React.createElement(\"br\", null), React.createElement(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), React.createElement(\"div\", null, React.createElement(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), React.createElement(\"br\", null), React.createElement(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordChk\n  }), passwordError && React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4\")), React.createElement(\"div\", null, React.createElement(Checkbox, {\n    name: \"user-term\",\n    value: term,\n    onChange: onChangeTerm\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4\"), termError && React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD574\\uC8FC\\uC138\\uC694\")), React.createElement(\"div\", null, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}